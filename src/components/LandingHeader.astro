---
import Logo from '../components/Logo.astro'

---

<header 
    id="landing-header"
    class="py-2 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white">

    <div class="flex flex-grow basis-0">
        <Logo/>
    </div>
    
    <nav class="max-[1200px]:hidden ">
        <ul class="flex text-sm [&>li>a]:transition-colors duration-150 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
            <li><a href="#">Veh√≠culos</a></li>
            <li><a href="#">Energ√≠a</a></li>
            <li><a href="#">Carga</a></li>
            <li><a href="#">Descubrir</a></li>
            <li><a href="#">Tienda</a></li>
        </ul>
    </nav>

    <nav class="flex flex-grow justify-end basis-0 max-[1200px]:hiddennp">
        <ul class="flex text-sm [&>li>a]:transition-colors duration-150 [&>li>a]:text-current [&>li>a]:inline-block [&>li>a]:px-2 [&>li>a]:py-2">
            <li><a href=""><svg class="w-[22px] h-6 stroke-current" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7.529 7.988a2.502 2.502 0 0 1 5 .191A2.441 2.441 0 0 1 10 10.582V12m-.01 3.008H10M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
            </svg></a></li>
            <li><a href=""><svg class="w-[22px] h-6 white stroke-current" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 21 20">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.487 1.746c0 4.192 3.592 1.66 4.592 5.754 0 .828 1 1.5 2 1.5s2-.672 2-1.5a1.5 1.5 0 0 1 1.5-1.5h1.5m-16.02.471c4.02 2.248 1.776 4.216 4.878 5.645C10.18 13.61 9 19 9 19m9.366-6h-2.287a3 3 0 0 0-3 3v2m6-8a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
            </svg></a></li>
            <li><a href=""><svg class="w-[22px] h-6 stroke-current" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 19a9 9 0 1 0 0-18 9 9 0 0 0 0 18Zm0 0a8.949 8.949 0 0 0 4.951-1.488A3.987 3.987 0 0 0 11 14H9a3.987 3.987 0 0 0-3.951 3.512A8.948 8.948 0 0 0 10 19Zm3-11a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
            </svg></a></li> 
        </ul>
    </nav>
    <div>
        <dialog class="open:bg-white  open:flex flex-col bottom-0 left-0 right-0 top-0 open:w-max open:h-max min-h-full min-w-full z-4000">
            <div class="p-4 items-end flex top-0 sticky z-10 flex-row-reverse justify-between ">
                <button class="p-2"><svg width="16px" height="16px" viewBox="0 0 14 14" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Rounded" transform="translate(-281.000000, -3481.000000)">
                            <g id="Navigation" transform="translate(100.000000, 3378.000000)">
                                <g id="-Round-/-Navigation-/-close" transform="translate(176.000000, 98.000000)">
                                    <g>
                                        <polygon id="Path" points="0 0 24 0 24 24 0 24"></polygon>
                                        <path d="M18.3,5.71 C17.91,5.32 17.28,5.32 16.89,5.71 L12,10.59 L7.11,5.7 C6.72,5.31 6.09,5.31 5.7,5.7 C5.31,6.09 5.31,6.72 5.7,7.11 L10.59,12 L5.7,16.89 C5.31,17.28 5.31,17.91 5.7,18.3 C6.09,18.69 6.72,18.69 7.11,18.3 L12,13.41 L16.89,18.3 C17.28,18.69 17.91,18.69 18.3,18.3 C18.69,17.91 18.69,17.28 18.3,16.89 L13.41,12 L18.3,7.11 C18.68,6.73 18.68,6.09 18.3,5.71 Z" id="üîπ-Icon-Color" fill="#1D1D1D"></path>
                                    </g>
                                </g>
                            </g>
                        </g>
                    </g>
                </svg></button>
            </div>
            <div class="pl-9 pr-12">
                <ol class="flex flex-col text-base font-medium pt-4 pr-0 pl-0 ml-[-16px] [&>li]:mb-4 [&>li>button]:pl-2 [&>li>button]:pr-2 [&>li>button]:pb-4 [&>li>button]:pt-4 
                    [&>li>button>span]:mb-0 [&>li>button>span]:mt-0 [&>li>button>span]:mr-1 [&>li>button>span]:ml-1" >
                    <li><button><span >Veh√≠culos</span></button></li>
                    <li><button><span>Energ√≠a</span></button></li>
                    <li><button><span>Carga</span></button></li>
                    <li><button><span>Descubrir</span></button></li>
                    <li><button><span>Tienda</span></button></li>
                    <li><button><span>Ayuda</span></button></li>
                    <li>
                        <button class="flex flex-row gap-4">
                            <svg class="w-[22px] h-6 white stroke-current" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 21 20">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6.487 1.746c0 4.192 3.592 1.66 4.592 5.754 0 .828 1 1.5 2 1.5s2-.672 2-1.5a1.5 1.5 0 0 1 1.5-1.5h1.5m-16.02.471c4.02 2.248 1.776 4.216 4.878 5.645C10.18 13.61 9 19 9 19m9.366-6h-2.287a3 3 0 0 0-3 3v2m6-8a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                            </svg>
                            <div>
                                <strong>M√©xico</strong>
                                <p>espa√±ol</p>
                            </div>
                        </button>
                    </li>
                    <li><button class="flex flex-row gap-4">
                        <svg class="w-[22px] h-6 stroke-current" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10 19a9 9 0 1 0 0-18 9 9 0 0 0 0 18Zm0 0a8.949 8.949 0 0 0 4.951-1.488A3.987 3.987 0 0 0 11 14H9a3.987 3.987 0 0 0-3.951 3.512A8.948 8.948 0 0 0 10 19Zm3-11a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                        </svg>
                        <div>
                            <p>Cuenta</p>
                        </div>
                    </button></li>
                </ol>
            </div>
        </dialog>
        <button class="min-[1200px]:hidden bg-current/5 backdrop-blur-lg rounded px-4 py-1 ">
            Men√∫
        </button>
    </div>

    <div 
        id="menu-backdrop"
        class="absolute bg-black/5 backdrop-blur-lg rounded 
        translate-x-[var(--left)] translate-y-[var(--top)] 
        left-0 top-0
        w-[var(--width)] h-[var(--height)] 
        transition-all duration-300
        ease-in-out opacity-0 -z-10"
        >
        
    </div>

</header>

<script>
    const listItem = document.querySelectorAll("#landing-header li")
    const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement 

    listItem.forEach((item) => {
        item.addEventListener("mouseenter", () =>{
            const {left, top, width, height } = item.getBoundingClientRect()

            menuBackDrop.style.setProperty("--left", `${left}px`)
            menuBackDrop.style.setProperty("--top", `${top}px`)
            menuBackDrop.style.setProperty("--width", `${width}px`)
            menuBackDrop.style.setProperty("--height", `${height}px`)

            menuBackDrop.style.opacity = "1"
            menuBackDrop.style.visibility = "visible"
        })

        item.addEventListener("mouseleave",()=>{
            menuBackDrop.style.opacity = "0"
            menuBackDrop.style.visibility = "hidden"
        })
    })

    
</script>

<script>
    const header = document.querySelector("#landing-header") as HTMLElement
    const observerOptions = {
        root: null,
        rootMargin: "0px",
        threshold: 0.9,
    }

    const observer = new IntersectionObserver((entries) =>{
        entries.forEach((entry) => {
            const {isIntersecting} = entry
            if (isIntersecting)
            {
                const color = entry.target.getAttribute("data-header-color")
                header.style.color = color
            }
        })
    }, observerOptions)

    const sections = document.querySelectorAll(".landing-section")
    sections.forEach((section) => observer.observe(section))
</script>

<script>
    const dialog = document.querySelector("dialog");
    const showButton = document.querySelector("dialog + button");   
    const closeButton = document.querySelector("dialog button");

    showButton.addEventListener("click", () =>{
        dialog.showModal();
    });

    closeButton.addEventListener("click", () =>{
        dialog.close();
    });
</script>